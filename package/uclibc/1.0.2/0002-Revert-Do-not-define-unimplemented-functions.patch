From 650380248eaad577445c88b7314307d3acd166fc Mon Sep 17 00:00:00 2001
From: Waldemar Brodkorb <wbx@openadk.org>
Date: Sat, 25 Apr 2015 07:09:40 -0500
Subject: [PATCH] Revert "Do not define unimplemented functions"

This reverts commit bd3eaf83ef1b4954b6c0e7ba8bbdd29b2cd4a833.

They are now implemented.

Signed-off-by: Waldemar Brodkorb <wbx@uclibc-ng.org>
---
 include/math.h                             |  2 --
 libc/sysdeps/linux/common/bits/mathcalls.h | 18 ------------------
 2 files changed, 20 deletions(-)

diff --git a/include/math.h b/include/math.h
index c79af3f..1b54c9e 100644
--- a/include/math.h
+++ b/include/math.h
@@ -118,7 +118,6 @@ __BEGIN_DECLS
 #  define _Mfloat_		float
 # endif
 # define _Mdouble_		_Mfloat_
-# define _Mdouble_is_float_
 # ifdef __STDC__
 #  define __MATH_PRECNAME(name,r) name##f##r
 # else
@@ -127,7 +126,6 @@ __BEGIN_DECLS
 # define _Mdouble_BEGIN_NAMESPACE __BEGIN_NAMESPACE_C99
 # define _Mdouble_END_NAMESPACE   __END_NAMESPACE_C99
 # include <bits/mathcalls.h>
-# undef _Mdouble_is_float_
 # undef	_Mdouble_
 # undef _Mdouble_BEGIN_NAMESPACE
 # undef _Mdouble_END_NAMESPACE
diff --git a/libc/sysdeps/linux/common/bits/mathcalls.h b/libc/sysdeps/linux/common/bits/mathcalls.h
index 3d7e34f..9bebb51 100644
--- a/libc/sysdeps/linux/common/bits/mathcalls.h
+++ b/libc/sysdeps/linux/common/bits/mathcalls.h
@@ -291,9 +291,7 @@ __END_NAMESPACE_C99
 #ifdef __USE_ISOC99
 __BEGIN_NAMESPACE_C99
 /* True gamma function.  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (tgamma,, (_Mdouble_))
-# endif
 __END_NAMESPACE_C99
 #endif
 
@@ -324,9 +322,7 @@ __MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__))
 libm_hidden_proto(nextafterl)
 # endif
 # if defined __USE_ISOC99 && !defined __LDBL_COMPAT
-#  ifndef _Mdouble_is_float_
 __MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__))
-#  endif
 # endif
 
 /* Return the remainder of integer divison X / Y with infinite precision.  */
@@ -343,15 +339,11 @@ __MATHDECLI (int,ilogb,, (_Mdouble_ __x))
 
 #ifdef __USE_ISOC99
 /* Return X times (2 to the Nth power).  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (scalbln,, (_Mdouble_ __x, long int __n))
-# endif
 
 /* Round X to integral value in floating-point format using current
    rounding direction, but do not raise inexact exception.  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (nearbyint,, (_Mdouble_ __x))
-# endif
 
 /* Round X to nearest integral value, rounding halfway cases away from
    zero.  */
@@ -364,9 +356,7 @@ __MATHCALLX (trunc,, (_Mdouble_ __x), (__const__))
 /* Compute remainder of X and Y and put in *QUO a value with sign of x/y
    and magnitude congruent `mod 2^n' to the magnitude of the integral
    quotient x/y, with n >= 3.  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (remquo,, (_Mdouble_ __x, _Mdouble_ __y, int *__quo))
-# endif
 
 
 /* Conversion functions.  */
@@ -383,19 +373,13 @@ __MATHDECLI (long long int,llround,, (_Mdouble_ __x))
 
 
 /* Return positive difference between X and Y.  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (fdim,, (_Mdouble_ __x, _Mdouble_ __y))
-# endif
 
 /* Return maximum numeric value from X and Y.  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (fmax,, (_Mdouble_ __x, _Mdouble_ __y))
-# endif
 
 /* Return minimum numeric value from X and Y.  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (fmin,, (_Mdouble_ __x, _Mdouble_ __y))
-# endif
 
 
 /* Classify given number.  */
@@ -406,9 +390,7 @@ __MATHDECL_PRIV (int, signbit,, (_Mdouble_ __value), (__const__))
 
 
 /* Multiply-add function computed as a ternary operation.  */
-# ifndef _Mdouble_is_float_
 __MATHCALLI (fma,, (_Mdouble_ __x, _Mdouble_ __y, _Mdouble_ __z))
-# endif
 #endif /* Use ISO C99.  */
 
 #if defined __USE_MISC || defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99
-- 
2.3.2 (Apple Git-55)

